{"version":3,"sources":["img/mypic.jpg","img/1.jpg","img/2.jpg","img/3.jpg","img/4.jpg","img/5.jpg","img/6.jpg","Travel.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Travel","country","destination","distance","photo","lang","charset","name","content","http-equiv","rel","href","integrity","crossorigin","className","id","src","App","require","alt","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2KAAAA,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,wECwD5BC,G,UAtDA,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAASC,EAAX,EAAWA,YAAaC,EAAxB,EAAwBA,SAAUC,EAAlC,EAAkCA,MAAlC,OAEX,0BAAMC,KAAK,MACP,8BACI,0BAAMC,QAAQ,UACd,0BAAMC,KAAK,WAAWC,QAAQ,0CAC9B,0BAAMC,aAAW,kBAAkBD,QAAQ,YAC3C,0BAAME,IAAI,aAAaC,KAAK,2EACxBC,UAAU,0EAA0EC,YAAY,cACpG,kDAEJ,8BACI,yBAAKC,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,OACX,yBAAKC,GAAG,WACJ,uCACCd,IAGT,yBAAKa,UAAU,OACX,yBAAKC,GAAG,eACJ,2CACCb,IAGT,yBAAKY,UAAU,OACX,yBAAKC,GAAG,YACJ,wCACCZ,KAIb,yBAAKW,UAAU,OACX,yBAAKA,UAAU,OACX,yBAAKC,GAAG,SACJ,qCACA,yBAAKC,IAAKZ,SAQ9B,4BAAQY,IAAI,mDACRJ,UAAU,0EAA0EC,YAAY,cACpG,4BAAQG,IAAI,4EACRJ,UAAU,0EAA0EC,YAAY,cACpG,4BAAQG,IAAI,yEACRJ,UAAU,0EAA0EC,YAAY,iBC/B7FI,MAff,WACE,OACE,yBAAKH,UAAU,cACjB,yBAAKE,IAAKE,EAAQ,IAAoBC,IAAI,WAE1C,kBAAC,EAAD,CAAQlB,QAAQ,QAASC,YAAY,YAAYC,SAAS,cAAcC,MAAOc,EAAQ,MACvF,kBAAC,EAAD,CAAQjB,QAAQ,QAASC,YAAY,YAAYC,SAAS,cAAcC,MAAOc,EAAQ,MACvF,kBAAC,EAAD,CAAQjB,QAAQ,QAASC,YAAY,YAAYC,SAAS,cAAcC,MAAOc,EAAQ,MACvF,kBAAC,EAAD,CAAQjB,QAAQ,UAAWC,YAAY,YAAYC,SAAS,MAAMC,MAAOc,EAAQ,MACjF,kBAAC,EAAD,CAAQjB,QAAQ,UAAWC,YAAY,YAAYC,SAAS,MAAMC,MAAOc,EAAQ,MACjF,kBAAC,EAAD,CAAQjB,QAAQ,UAAWC,YAAY,YAAYC,SAAS,MAAMC,MAAOc,EAAQ,QCJ/DE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.300e886c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mypic.83e1791c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1.83e1791c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.de69c6d5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.a13c3bb6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.ed59ff9a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/5.2e3242e5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/6.74aa47b6.jpg\";","import React from 'react';\r\n\r\nconst Travel = ({country, destination, distance, photo}) => (\r\n\r\n    <html lang=\"en\">\r\n        <head>\r\n            <meta charset=\"UTF-8\" />\r\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n            <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" />\r\n            <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\r\n                integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\"></link>\r\n            <title>Travel Website</title>\r\n        </head>\r\n        <body>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div id=\"country\">\r\n                            <h1>Country</h1>\r\n                            {country}\r\n                            </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <div id=\"destination\">\r\n                            <h1>Destination</h1>\r\n                            {destination}\r\n                            </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <div id=\"distance\">\r\n                            <h1>Distance</h1>\r\n                            {distance}\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div id=\"photo\">\r\n                            <h1>Photo</h1>\r\n                            <img src={photo}/>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </body>\r\n\r\n        <script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\"\r\n            integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\" crossorigin=\"anonymous\"></script>\r\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\"\r\n            integrity=\"sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1\" crossorigin=\"anonymous\"></script>\r\n        <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\"\r\n            integrity=\"sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM\" crossorigin=\"anonymous\"></script>\r\n    </html>\r\n)\r\n\r\nexport default Travel;","import React from 'react';\nimport './App.css';\n\nimport Travel from './Travel';\n\n\nfunction App() {\n  return ( \n    <div className=\"madagascar\">\n  <img src={require(\"./img/mypic.jpg\")} alt=\"asdasd\" />\n  \n  <Travel country=\"Earth\"  destination=\"Neo-Tokyo\" distance=\"58km^3/week\" photo={require(\"./img/1.jpg\")}/>\n  <Travel country=\"Earth\"  destination=\"Neo-Tokyo\" distance=\"58km^3/week\" photo={require(\"./img/2.jpg\")}/>\n  <Travel country=\"Earth\"  destination=\"Neo-Tokyo\" distance=\"58km^3/week\" photo={require(\"./img/3.jpg\")}/>\n  <Travel country=\"Romania\"  destination=\"Bucharest\" distance=\"0 m\" photo={require(\"./img/4.jpg\")}/>\n  <Travel country=\"Romania\"  destination=\"Bucharest\" distance=\"0 m\" photo={require(\"./img/5.jpg\")}/>\n  <Travel country=\"Romania\"  destination=\"Bucharest\" distance=\"0 m\" photo={require(\"./img/6.jpg\")}/>\n  </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}